{{- /*gotype: github.com/cidverse/cid/pkg/app/appconfig.TemplateData*/ -}}
{{- $root := . -}}
{{- $cidDep := index $root.WorkflowDependency "cid" -}}
{{- $checkoutAction := index $root.WorkflowDependency "actions/checkout" -}}
{{- $downloadArtifactAction := index $root.WorkflowDependency "actions/download-artifact" -}}
{{- $uploadArtifactAction := index $root.WorkflowDependency "actions/upload-artifact" -}}
{{- $uploadSarifAction := index $root.WorkflowDependency "github/codeql-action/upload-sarif" -}}
{{- $hardenRunnerAction := index $root.WorkflowDependency "step-security/harden-runner" -}}
{{- $cidSetupAction := index $root.WorkflowDependency "cidverse/ghact-cid-setup" -}}
# cid-workflow-version: {{ .Version }}

# This file is generated by the CID Workflow GitHub App.
# DO NOT EDIT!

# name
name: 'CI - {{ .Name }}'

# triggers
on:
  {{- if .WorkflowConfig.TriggerManual }}
  workflow_dispatch:
    inputs:
      loglevel:
        description: Log level
        required: true
        default: info
        type: choice
        options:
          - trace
          - debug
          - info
          - warn
          - error
  {{- end }}
  {{- if .WorkflowConfig.TriggerPush }}
  push:
    {{- if .WorkflowConfig.TriggerPushBranches }}
    branches:
      {{- range $branch := .WorkflowConfig.TriggerPushBranches }}
      - {{ $branch }}
      {{- end }}
    {{- end }}
    {{- if .WorkflowConfig.TriggerPushTags }}
    tags:
      {{- range $tag := .WorkflowConfig.TriggerPushTags }}
      - {{ $tag }}
      {{- end }}
    {{- end }}
    paths-ignore:
      {{- range $f := .IgnoreFiles }}
      - '{{ $f }}'
      {{- end }}
  {{- end }}
  {{- if .WorkflowConfig.TriggerPullRequest }}
  pull_request:
    branches:
      - '{{ .DefaultBranch }}'
    paths-ignore:
      {{- range $f := .IgnoreFiles }}
      - '{{ $f }}'
      {{- end }}
  {{- end }}
  {{- if .WorkflowConfig.TriggerSchedule }}
  # cron-based trigger
  schedule:
    - cron: '{{ .WorkflowConfig.TriggerScheduleCron }}'
  {{- end }}

# permissions, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions and https://docs.github.com/en/rest/overview/permissions-required-for-github-apps
permissions:
  actions: read # detection of GitHub Actions environment
  checks: none
  contents: read
  deployments: none
  id-token: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

# cancel in progress when a new run starts
concurrency:
  group: "{{ printf "%s" "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}" }}"
  cancel-in-progress: true

env:
  CID_WORKFLOW: 'main'
  CID_LOGLEVEL: "{{ printf "%s" "${{ github.event.inputs.loglevel || 'info' }}" }}"
  # allowed modes are 'block' and 'audit'. Using https://github.com/step-security/harden-runner to harden the runner.
  EGRESS_POLICY: 'block'

# jobs
jobs:
  {{- range $step := .Plan.Steps }}
  # {{ $step.Name }}
  {{ $step.Slug }}:
    name: '{{ $step.Name }}'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    {{- if $step.RunAfter }}
    needs: [{{ join $step.RunAfter ", " }}]
    {{- end }}
    permissions:
      id-token: write # provenance signing
      {{- if and (eq $step.Stage "scan") (ne $root.WorkflowConfig.Type "pull-request") }}
      security-events: write # upload security events
      {{- end }}
      {{- if and (eq $step.Stage "publish") (ne $root.WorkflowConfig.Type "pull-request") }}
      packages: write # upload packages
      {{- end }}
    timeout-minutes: {{ $root.JobTimeout }}
    {{- if $step.Environment }}
    environment:
      name: '{{ $step.Environment}}'
    {{- end }}
    steps:
      - name: Harden Runner
        uses: {{ $hardenRunnerAction.Id }}@{{ $hardenRunnerAction.Hash }} # {{ $hardenRunnerAction.Version }}
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "{{ printf "%s" "${{ env.EGRESS_POLICY }}" }}"
          {{- if $step.Access.Network }}
          allowed-endpoints: >-
            {{- range $n := $step.Access.Network }}
            {{ $n.Host }}
            {{- end }}
          {{- end }}
      - name: Setup Tools
        uses: {{ $cidSetupAction.Id }}@{{ $cidSetupAction.Hash }} # {{ $cidSetupAction.Version }}
        with:
          version: "v{{ $cidDep.Version }}"
      - name: Checkout
        uses: {{ $checkoutAction.Id }}@{{ $checkoutAction.Hash }} # {{ $checkoutAction.Version }}
        with:
          fetch-depth: 0
          persist-credentials: false
      {{- if $step.UsesOutputOf }}
      {{- range $prevStepSlug := $step.UsesOutputOf }}
      - name: Download Inputs > {{ $prevStepSlug }}
        uses: {{ $downloadArtifactAction.Id }}@{{ $downloadArtifactAction.Hash }} # {{ $downloadArtifactAction.Version }}
        with:
          name: "{{ $prevStepSlug }}-{{ printf "%s" "${{ github.run_id }}" }}"
          path: ".dist/{{ $prevStepSlug }}"
        continue-on-error: true
      {{- end }}
      {{- end }}
      - name: Action - {{ $step.Name }}
        env:
          CID_WORKFLOW: "{{ printf "%s" "${{ env.CID_WORKFLOW }}" }}"
          CID_LOGLEVEL: "{{ printf "%s" "${{ env.CID_LOGLEVEL }}" }}"
          GITHUB_TOKEN: "{{ printf "%s" "${{ secrets.GITHUB_TOKEN }}" }}"
          {{- range $e := $step.Access.Environment }}
          {{- if and $e.Secret (not $e.Pattern) }}
          {{ $e.Name }}: "{{ printf "${{ secrets.%s }}" $e.Name }}"
          {{- else if (not $e.Pattern) }}
          {{ $e.Name }}: "{{ printf "${{ vars.%s }}" $e.Name }}"
          {{- end }}
          {{- end }}
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "{{ $root.WorkflowKey }}" --step "{{ $step.Slug }}"
      - name: Upload Outputs
        uses: {{ $uploadArtifactAction.Id }}@{{ $uploadArtifactAction.Hash }} # {{ $uploadArtifactAction.Version }}
        with:
          name: "{{ $step.Slug }}-{{ printf "%s" "${{ github.run_id }}" }}"
          path: ".dist/{{ $step.Slug }}/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  {{- end }}
